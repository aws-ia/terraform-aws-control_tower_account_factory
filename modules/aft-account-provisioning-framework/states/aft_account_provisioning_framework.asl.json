{
  "StartAt": "aft_account_provisioning_framework_persist_metadata",
  "States": {
    "aft_account_provisioning_framework_persist_metadata": {
      "Next": "aft_account_provisioning_framework_create_role",
      "Type": "Task",
      "Resource": "arn:${current_partition}:states:::lambda:invoke",
      "ResultPath": "$.persist_metadata",
      "ResultSelector": {"StatusCode.$":"$.StatusCode"},
      "Parameters": {
        "FunctionName": "${persist_metadata_function_name}",
        "Payload": {
          "job_name.$": "$$.Execution.Name",
          "payload.$": "$",
          "action": "persist_metadata"
        }
      },
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "Next": "aft_account_provisioning_framework_notify_error"
        }
      ]
    },
    "aft_account_provisioning_framework_create_role": {
      "Next": "aft_account_provisioning_framework_tag_account",
      "Type": "Task",
      "Resource": "arn:${current_partition}:states:::lambda:invoke",
      "ResultPath": "$.role",
      "ResultSelector": {"Arn.$":"$.Payload"},
      "Parameters": {
        "FunctionName": "${create_role_function_name}",
        "Payload": {
          "job_name.$": "$$.Execution.Name",
          "payload.$": "$",
          "action": "create_role"
        }
      },
      "Retry": [
        {
          "ErrorEquals": ["States.ALL"],
          "BackoffRate": 1.5,
          "IntervalSeconds": 60,
          "MaxAttempts": 5
        }
      ],
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "Next": "aft_account_provisioning_framework_notify_error"
        }
      ]
    },
    "aft_account_provisioning_framework_tag_account": {
      "Next": "aft_account_provisioning_framework_account_metadata_ssm",
      "Type": "Task",
      "Resource": "arn:${current_partition}:states:::lambda:invoke",
      "ResultPath": "$.account_tags",
      "ResultSelector": {"StatusCode.$":"$.StatusCode"},
      "Parameters": {
        "FunctionName": "${tag_account_function_name}",
        "Payload": {
          "job_name.$": "$$.Execution.Name",
          "payload.$": "$",
          "action": "tag_account",
          "account_info.$": "$.account_info"
        }
      },
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "Next": "aft_account_provisioning_framework_notify_error"
        }
      ]
    },
    "aft_account_provisioning_framework_account_metadata_ssm": {
      "Next": "aft_account_provisioning_framework_aft_features",
      "Type": "Task",
      "Resource": "arn:${current_partition}:states:::lambda:invoke",
      "ResultPath": "$.account_metadata_ssm",
      "ResultSelector": {"StatusCode.$":"$.StatusCode"},
      "Parameters": {
        "FunctionName": "${account_metadata_ssm_function_name}",
        "Payload": {
          "job_name.$": "$$.Execution.Name",
          "payload.$": "$",
          "action": "account_metadata_ssm",
          "account_info.$": "$.account_info"
        }
      },
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "Next": "aft_account_provisioning_framework_notify_error"
        }
      ]
    },
    "aft_account_provisioning_framework_aft_features": {
      "Next": "aft_account_provisioning_customizations",
      "Type": "Task",
      "Resource": "arn:${current_partition}:states:::states:startExecution.sync:2",
      "Parameters": {
        "StateMachineArn": "${aft_account_provisioning_framework_aft_features_state_machine_arn}",
        "Input.$": "$"
      }
    },
    "aft_account_provisioning_customizations": {
      "Next": "run_create_pipeline?",
      "Type": "Task",
      "Resource": "arn:${current_partition}:states:::states:startExecution.sync:2",
      "Parameters": {
        "StateMachineArn": "${aft_account_provisioning_customizations_state_machine_arn}",
        "Input.$": "$.Input"
      },
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "Next": "run_create_pipeline?"
        }
      ]
    },
    "run_create_pipeline?": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.Input.account_provisioning.run_create_pipeline",
          "StringEquals": "true",
          "Next": "aft_account_provisioning_framework_create_pipeline"
        }
      ],
      "Default": "aft_account_provisioning_framework_notify_success"
    },
    "aft_account_provisioning_framework_create_pipeline": {
      "Next": "aft_account_provisioning_framework_notify_success",
      "Type": "Task",
      "Resource": "arn:${current_partition}:states:::codebuild:startBuild.sync",
      "Parameters": {
        "ProjectName": "aft-create-pipeline",
        "EnvironmentVariablesOverride": [
          {
            "Name": "VENDED_ACCOUNT_ID",
            "Type": "PLAINTEXT",
            "Value.$": "$.Input.account_info.account.id"
          }
        ]
      },
      "ResultPath": "$.aft_account_provisioning_framework_create_pipeline",
      "ResultSelector": {
        "StatusCode.$": "$.SdkHttpMetadata.HttpStatusCode",
        "BuildStatus.$": "$.Build.BuildStatus",
        "BuildComplete.$": "$.Build.BuildComplete"
      },
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "Next": "aft_account_provisioning_framework_notify_error"
        }
      ]
    },
    "aft_account_provisioning_framework_notify_success": {
      "Type": "Task",
      "Resource": "arn:${current_partition}:states:::sns:publish",
      "Parameters": {
        "TopicArn": "${aft_notification_arn}",
        "Message.$": "$"
      },
      "End": true
    },
    "aft_account_provisioning_framework_notify_error": {
      "Type": "Task",
      "Resource": "arn:${current_partition}:states:::sns:publish",
      "Parameters": {
        "TopicArn": "${aft_failure_notification_arn}",
        "Message.$": "$.Cause"
      },
      "Next": "Failed"
    },
    "Failed": {
      "Type": "Fail"
    }
  }
}
